{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,ADKA,ICLM,ADKN,ICLU,ADKV,GCLa,ADKb,ICLiB,MAAA,CAAA,EDKjB,ECLqB,CAAC,SDKtB;ECLuB,ADOnB,ICPuB,EAAE,GDOzB,GCP+B,CDO/B,CAAoB,IAAgB,EAAA;ECPH,EDOb,CCPgB,EAAE,CDOlB,CAAA,IAAI,GAAJ,IAAI;ACPgB,CAAC,CAAC,EDM1C,IAAA,CAAA,MAAM,GAAoC,CAAA,CAAE;ACJhD,EDK2C,ECLvC,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EACd,ADMA,IAAA,CAAA,ECNO,CAAC,GAAG,CAAC,EDMZ,CAAA,GAAG,GAAH,CCNsB,CAAC,QDMnB,QAAgB,EAAA;ACLxB,CAAC,CAAC,EDMM,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;ACJlC,EDKI,CAAC,CCLD,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAA;EACd,ADMA,IAAA,CAAA,ECNO,CAAC,GAAG,CAAC,EDMZ,CAAA,GAAG,GAAH,CCNsB,CAAC,QDMnB,MAAiB,EAAA;ACLzB,CAAC,CAAC,EDMM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;ACJxC,EDKI,CAAC,CCLD,CAAC,OAAO,CAAC,QAAQ,CAAC;EDOlB,IAAA,CAAA,SAAA,CAAA,EAAE,GAAF,UAAG,SAAiB,EAAE,QAAmB,EAAA;IACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;IAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ;EACrC,CAAC;EAED,IAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,SAAiB,EAAA;IACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC,IAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;IAEvC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,EAAA;MAAI,OAAA,OAAO,CAAA,CAAE;IAAT,CAAS,CAAC;EAC1C,CAAC;EACL,OAAA,IAAC;AAAD,CAxBA,CAAA,CAAA;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\r\n    name?: string;\r\n    age?: number;\r\n}\r\n\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n    events: { [key : string] : Callback[] } = {};\r\n    constructor(private data : UserProps) {}\r\n\r\n    get(propName: string) : (string | number) {\r\n        return this.data[propName];\r\n    }\r\n\r\n    set(update: UserProps) : void {\r\n        Object.assign(this.data, update);\r\n    }\r\n\r\n    on(eventName: string, callback : Callback) : void {\r\n        const handlers = this.events[eventName] || [];\r\n        handlers.push(callback);\r\n        this.events[eventName] = handlers;\r\n    }\r\n\r\n    trigger(eventName: string) : void {\r\n        const handlers = this.events[eventName];\r\n        if(!handlers || handlers.length === 0) return;\r\n\r\n        handlers.forEach(handler => handler());\r\n    }\r\n}","import { User } from \"./models/User\";\r\n\r\nconst user = new User({name: \"John\", age: 28});\r\n\r\nuser.on(\"change\", () => {\r\n    console.log(\"Change 1\");\r\n});\r\n\r\nuser.on(\"change\", () => {\r\n    console.log(\"Change 2\");\r\n});\r\n\r\nuser.trigger(\"change\");"]}